import{_ as i,c as a,a2 as e,o as n}from"./chunks/framework.BjqFKMAQ.js";const c=JSON.parse('{"title":"你好Jenkins，以[docker in docker]的方式见面","description":"","frontmatter":{},"headers":[],"relativePath":"devops/hello-jenkins.md","filePath":"devops/hello-jenkins.md","lastUpdated":1728284321000}'),l={name:"devops/hello-jenkins.md"};function p(r,s,t,h,k,o){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="你好jenkins-以-docker-in-docker-的方式见面" tabindex="-1">你好Jenkins，以[docker in docker]的方式见面 <a class="header-anchor" href="#你好jenkins-以-docker-in-docker-的方式见面" aria-label="Permalink to &quot;你好Jenkins，以[docker in docker]的方式见面&quot;">​</a></h1><blockquote><p>基于docker-compose快速构建Jenkins容器，且Jenkins容器与宿主机docker环境连通，实现「docker in docker」。</p></blockquote><h2 id="项目特点" tabindex="-1">项目特点 <a class="header-anchor" href="#项目特点" aria-label="Permalink to &quot;项目特点&quot;">​</a></h2><ul><li>使用docker部署Jenkins，与宿主机操作系统隔离，保证系统的隔离性和整洁性</li><li>轻松支持多版本，不同操作系统环境迁移性强（可移植性强）</li><li>Jenkins容器内置docker，称为「docker in docker」，不必在Jenkins内部再安装npm maven go mysql等环境依赖</li></ul><h2 id="前置要求" tabindex="-1">前置要求 <a class="header-anchor" href="#前置要求" aria-label="Permalink to &quot;前置要求&quot;">​</a></h2><ol><li>默认基础环境：amd64 Linux，推荐使用Ubuntu22.04</li><li>安装docker和docker-compose</li></ol><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><p>克隆项目</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/xiaolinstar/docker-jenkins.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>进入项目</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-jenkins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>检查挂载卷 ，本项目中<code>docker-compose.yaml</code>中的挂载卷值默认为：</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/usr/bin/docker:/usr/bin/docker&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/var/run/docker.sock:/var/run/docker.sock&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./jenkins_home:/var/jenkins_home&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>👀在Windows或macOS中下载Docker Desktop可能存在参数不一致，请自行检查并酌情修改</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Macbook Pro M1pro </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Docker Desktop</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/usr/local/bin/docker:/usr/bin/docker&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;~/.docker/run/docker.sock:/var/run/docker.sock&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./jenkins_home:/var/jenkins_home&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>启动容器</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建jenkins_home并在后台启动docker容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins_home</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>检查容器状态</p><p>启动的Jenkins容器名默认为<code>xiaolin-jenkins</code></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>进入<code>xiaolin-jenkins</code>容器内部，查看<code>docker</code>命令</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 宿主机执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xiaolin-jenkins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/sh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查Jenkins容器内docker环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>查看到相应的输出则正常启动成功。</p><p>❗️xiaolin-jenkins容器内的docker环境与宿主机是相通的，共享同一个docker环境。因此在xiaolin-jenkins容器内创建的容器，在宿主机上也能查看到。</p><h2 id="jenkins快速体验" tabindex="-1">Jenkins快速体验 <a class="header-anchor" href="#jenkins快速体验" aria-label="Permalink to &quot;Jenkins快速体验&quot;">​</a></h2><p>Web体验，通过浏览器进入宿主机8080端口</p><ul><li>云服务： \${IP}:8080</li><li>本地： <a href="http://localhost:8080" target="_blank" rel="noreferrer">http://localhost:8080</a></li></ul><p>获取登录密钥，查看日志信息，获取一串密钥，用于Web端登录</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xiaolin-jenkins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Jenkins以插件的方式支持功能扩展，目前已经有1000+插件，除了安装社区推荐的插件外，建议安装以下插件：</p><ul><li>Blue Ocean: BlueOcean Aggregator</li><li>Docker Commons: Provides the common shared functionality for various Docker-related plugins</li><li>Docker Compose Build Step: Docker Compose plugin for Jenkins</li></ul><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ol><li><p>Jenkins用户手册，<a href="https://www.jenkins.io/zh/doc/" target="_blank" rel="noreferrer">https://www.jenkins.io/zh/doc/</a></p></li><li><p>Blue Ocean UI，<a href="https://www.jenkins.io/zh/doc/book/blueocean/" target="_blank" rel="noreferrer">https://www.jenkins.io/zh/doc/book/blueocean/</a></p></li><li><p>Docker，<a href="https://www.docker.com/" target="_blank" rel="noreferrer">https://www.docker.com/</a></p></li></ol><h2 id="联系作者" tabindex="-1">联系作者 <a class="header-anchor" href="#联系作者" aria-label="Permalink to &quot;联系作者&quot;">​</a></h2><p>如果您有需要技术咨询，或者有想法使本文档变得更好。</p><p>联系作者：xing.xiaolin@foxmail.com</p>`,36)]))}const b=i(l,[["render",p]]);export{c as __pageData,b as default};
